{"version":3,"sources":["components/NavBar/NavBarButton.js","components/NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["NavBarButton","title","href","className","NavBar","largeView","App","updateCurrent","value","updatePredicate","setState","window","innerWidth","console","log","state","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","printView","current","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAYeA,EAVM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC9B,OACC,qBAAKC,UAAU,uCAAf,SACC,mBAAGD,KAAMA,EAAT,SACC,wBAAQC,UAAU,eAAlB,SAAkCF,SCyCvBG,G,MAvCA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjB,OACC,qBAAKF,UAAU,YAAf,SACC,sBAAKA,UAAU,YAAf,UACC,qBAAKA,UAAU,cAAf,2BACA,8BACEE,EACA,qBAAIF,UAAU,aAAd,UACC,cAAC,EAAD,CAAcA,UAAU,eAAeF,MAAO,aAC9C,wBAAQE,UAAU,eAAlB,sBACA,wBAAQA,UAAU,eAAlB,wBACA,wBAAQA,UAAU,eAAlB,0BAGD,oBAAIA,UAAU,aAAd,SACC,wBAAQA,UAAU,eAAlB,4BCqCQG,G,6DAlDb,aAAe,IAAD,8BACZ,gBAUFC,cAAgB,YAAa,EAAXC,OAXJ,EAedC,gBAAkB,WAChB,EAAKC,SAAS,CAAEL,UAAWM,OAAOC,WAAa,MAAO,WACpDC,QAAQC,IAAI,OAAQ,EAAKC,MAAMV,eAjBrB,EAqBdW,kBAAoB,WAClB,EAAKP,kBACLE,OAAOM,iBAAiB,SAAU,EAAKR,kBAvB3B,EA0BdS,qBAAuB,WACrBP,OAAOQ,oBAAoB,SAAU,EAAKV,kBA3B9B,EA8BdW,UAAY,WACVP,QAAQC,IAAI,EAAKC,MAAMV,YA7BvB,EAAKU,MAAQ,CACXM,QAAS,EACThB,WAAW,GAJD,E,0CAkCd,WAEE,IAAMA,EAAYiB,KAAKP,MAAMV,UAE7B,OACE,qBAAKF,UAAU,uBAAf,SACE,cAAC,EAAD,CAAQE,UAAWA,U,GAzCTkB,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7b1e6ab7.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBarButton = ({ title, href }) => {\n\treturn (\n\t\t<div className='flex items-center justify-center ma2'>\n\t\t\t<a href={href}>\n\t\t\t\t<button className='navbutton-v2'>{title}</button>\n\t\t\t</a>\n\t\t</div>\n\t)\n}\n\nexport default NavBarButton;\n\n// className='nav-button bg-transparent ba b--white br3 hover-bg-white white grow b pointer'","import React from 'react';\nimport NavBarButton from './NavBarButton';\nimport './NavBar.css';\nimport './NavBarV2.css';\n\n// main div = h3 bg-blue flex items-center justify-center teststyle1\n// subtitle div = f6 w-40 self-center\n\nconst NavBar = ({ largeView }) => {\n\treturn (\n\t\t<div className='navdiv-v2'>\n\t\t\t<nav className='navbar-v2'>\n\t\t\t\t<div className='navtitle-v2'>Website Title</div>\n\t\t\t\t<div>\n\t\t\t\t\t{largeView ? (\n\t\t\t\t\t\t<li className='navlist-v2'>\n\t\t\t\t\t\t\t<NavBarButton className='navbutton-v2' title={'Item One'}/>\n\t\t\t\t\t\t\t<button className='navbutton-v2'>Item Two</button>\n\t\t\t\t\t\t\t<button className='navbutton-v2'>Item Three</button>\n\t\t\t\t\t\t\t<button className='navbutton-v2'>Item Four</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<li className='navlist-v2'>\n\t\t\t\t\t\t\t<button className='navburger-v2'>///</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</div>\n\t)\n\n\t// return (\n\t// \t<div className='navdiv'>\n\t// \t\t<nav className='navbar'>\n\t// \t\t\t<div className='title pointer'>CosmoReady</div>\n\t// \t\t\t<div className='link-list'>\n\t// \t\t\t\t<NavBarButton className='link-item' title={'Products'} href={'https://www.google.com'}/>\n\t// \t\t\t\t<NavBarButton className='link-item' title={'State Board'} href={'https://www.google.com'}/>\n\t// \t\t\t\t<NavBarButton className='link-item' title={'About'} href={'https://www.google.com'}/>\n\t// \t\t\t\t<NavBarButton className='link-item' title={'Contact'} href={'https://www.google.com'}/>\n\t// \t\t\t</div>\n\t// \t\t\t<div className='subtitle'>Test Prep for Cosmetologists, Barbers, Estheticians, Nail Technicians and Instructors</div>\n\t// \t\t</nav>\n\t// \t</div>\n\t// )\n}\n\nexport default NavBar;","import { React, Component } from 'react';\nimport './App.css';\nimport './components/NavBar/NavBar.css';\n\nimport NavBar from './components/NavBar/NavBar';\nimport LandingPage from './components/LandingPage/LandingPage';\n// import ImageSlider3 from './components/ImageSlider/ImageSlider3';\n// import SliderData from './components/ImageSlider/SliderData';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      current: 0,\n      largeView: true\n    };\n\n    // no idea what this line does\n    // this.updatePredicate = this.updatePredicate.bind(this);\n  }\n\n  updateCurrent = ({value}) => {\n    // this.setState({ current: value})\n  }\n\n  updatePredicate = () => {\n    this.setState({ largeView: window.innerWidth > 800 }, () => {\n      console.log('UP: ', this.state.largeView);\n    });\n  }\n\n  componentDidMount = () => {\n    this.updatePredicate();\n    window.addEventListener('resize', this.updatePredicate);\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.updatePredicate);\n  }\n\n  printView = () => {\n    console.log(this.state.largeView);\n  }\n\n  render() {\n    // const { current } = this.state;\n    const largeView = this.state.largeView;\n\n    return (\n      <div className=\"App flex flex-column\">\n        <NavBar largeView={largeView}/>\n        {/*<LandingPage />*/}\n        {/*<ImageSlider className='' slides={SliderData}/>*/}\n        {/*<ImageSlider2 />*/}\n        {/*<ImageSlider3 slides={SliderData} current={current} update={this.updateCurrent}/>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}